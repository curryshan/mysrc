

.c源代码转换成可执行文件的过程分为两大过程：编译过程和链接过程。

		  (1)                 (2)             (3)
	.c-----------》 .s   -----------》.o  -----------》.exe
		编译器				汇编器			链接器
		
			(1)和(2)合称编译过程			(3)链接过程
			
			
	编译过程：读取源程序(字符流),将高级语言指令转换为功能等效的汇编代码。编译过程包含两个阶段，
	预编译和编译。(注：预处理不属于预编译)
	
		预编译：
			(1) 替换宏定义指令 (2) 替换条件编译指令
			(3) 替换头文件 	   (4) 替换特殊符号 
			对应操作指令： gcc -E hello.c -o hello.i
				E 通知gcc对目标文件进行预编译，这里的目标文件是hello.c
				o 对命令输出结果进行导入操作，这里是把gcc -E hello.c操作结果
					输出到hello.i中保存
					
		编译：
			对代码进行语法，语义分析和错误判断，生成汇编代码文件
			对应操作指令：gcc -S hello.i -o hello.s
				S 通知gcc对目标文件进行编译，这里的目标文件是hello.i
		
		汇编：
			把汇编代码转换为二进制文件
			对应操作指令：gcc -c hello.s -o hello.o
				c 通知gcc对目标文件执行指令转换操作
		
	链接过程：链接过程的主要工作就是将有关的目标文件彼此相连接，
			  即将在一个文件中引用的符号同该符号在另外一个文件中的定义连接起来，
			  使得所有的这些目标文件成为一个能够按操作系统装入执行的统一整体。		
			  
			  原因是：由汇编程序生成的目标文件并不能立即就被执行，
			  其中可能还有许多没有解决的问题。 
			  例如，某个源文件中的函数可能引用了另一个源文件中定义的某个符号（
			  如变量或者函数调用等）；在程序中可能调用了某个库文件中的函数，等等。
			  所有的这些问题，都需要经链接程序的处理方能得以解决。		
		
		对应操作指令：gcc hello.o -o hello

	注：以上所有过程可通过gcc hello.c -o hello 一步生成可执行文件。
	
		
		
			
			
			
			
			
			
			
			
			
			
			